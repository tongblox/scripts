[
    {
        "command": "/goto username",
        "description": "来到用户位置",
        "code": "-- 放在 LocalScript 中，运行在客户端\nlocal Players = game:GetService(\"Players\")\nlocal PathfindingService = game:GetService(\"PathfindingService\")\nlocal LocalPlayer = Players.LocalPlayer\nlocal Humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass(\"Humanoid\")\nlocal RootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(\"HumanoidRootPart\")\n\nlocal TargetPlayerName = username\nlocal HasMoved = false\nif not Humanoid or not RootPart then warn(\"角色或Humanoid未加载\") return end\nlocal function findTargetPlayer() for _, player in pairs(Players:GetPlayers()) do if player.Name == TargetPlayerName and player.Character then return player.Character end end return nil end\nlocal function moveToTarget() if HasMoved then return end local targetCharacter = findTargetPlayer() if not targetCharacter then warn(\"未找到目标玩家或其角色\") return end local targetRootPart = targetCharacter:FindFirstChild(\"HumanoidRootPart\") if not targetRootPart then warn(\"目标玩家没有HumanoidRootPart\") return end local path = PathfindingService:CreatePath({AgentRadius=2,AgentHeight=5,AgentCanJump=true,AgentCanClimb=true,WaypointSpacing=4,Costs={Water=20,Dangerous=math.huge}}) local success, errorMessage = pcall(function() path:ComputeAsync(RootPart.Position,targetRootPart.Position) end) if not success or path.Status ~= Enum.PathStatus.Success then warn(\"路径计算失败: \"..(errorMessage or \"未知错误\")) return end local waypoints = path:GetWaypoints() for i, waypoint in ipairs(waypoints) do if not Humanoid or Humanoid.Health <= 0 then warn(\"角色已死亡或失效\") return end Humanoid:MoveTo(waypoint.Position) if waypoint.Action == Enum.PathWaypointAction.Jump then Humanoid.Jump=true end local reached = Humanoid.MoveToFinished:Wait(5) if not reached then warn(\"未到达路径点:\"..tostring(waypoint.Position)) break end end HasMoved = true print(\"已到达目标玩家位置\") end\nmoveToTarget()"
    }
]
