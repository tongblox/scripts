[
    {
        "command": "/goto username",
        "description": "到达指定玩家的位置，比如来我这，走过来，到这这里来，你可以到我这里来吗等等",
        "code": "local Players = game:GetService(\"Players\")\nlocal PathfindingService = game:GetService(\"PathfindingService\")\nlocal LocalPlayer = Players.LocalPlayer\nlocal Humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass(\"Humanoid\")\nlocal RootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(\"HumanoidRootPart\")\n\nlocal TargetPlayerName = username -- 外部传入的变量\nlocal HasMoved = false\n\nif not Humanoid or not RootPart then warn(\"角色或Humanoid未加载\") return end\n\nlocal function findTargetPlayer()\n    for _, player in pairs(Players:GetPlayers()) do\n        if player.Name == TargetPlayerName and player.Character then\n            return player.Character\n        end\n    end\n    return nil\nend\n\nlocal function moveToTarget()\n    if HasMoved then return end\n    local targetCharacter = findTargetPlayer()\n    if not targetCharacter then warn(\"未找到目标玩家或其角色\") return end\n    local targetRootPart = targetCharacter:FindFirstChild(\"HumanoidRootPart\")\n    if not targetRootPart then warn(\"目标玩家没有HumanoidRootPart\") return end\n\n    local path = PathfindingService:CreatePath({AgentRadius=2, AgentHeight=5, AgentCanJump=true, AgentCanClimb=true, WaypointSpacing=4, Costs={Water=20, Dangerous=math.huge}})\n    local success, errorMessage = pcall(function()\n        path:ComputeAsync(RootPart.Position, targetRootPart.Position)\n    end)\n\n    if not success or path.Status ~= Enum.PathStatus.Success then warn(\"路径计算失败: \"..(errorMessage or \"未知错误\")) return end\n\n    local waypoints = path:GetWaypoints()\n    for i, waypoint in ipairs(waypoints) do\n        if not Humanoid or Humanoid.Health <= 0 then warn(\"角色已死亡或失效\") return end\n        Humanoid:MoveTo(waypoint.Position)\n        if waypoint.Action == Enum.PathWaypointAction.Jump then Humanoid.Jump = true end\n        local reached = Humanoid.MoveToFinished:Wait(5)\n        if not reached then warn(\"未到达路径点:\"..tostring(waypoint.Position)) break end\n    end\n\n    HasMoved = true\n    print(\"已到达目标玩家位置\")\nend\n\nmoveToTarget()"
    },
    {
        "command": "/follow username",
        "description": "持续跟随指定玩家，比如跟着我，跟我走等",
        "code": "local Players = game:GetService(\"Players\")\nlocal PathfindingService = game:GetService(\"PathfindingService\")\nlocal LocalPlayer = Players.LocalPlayer\nlocal Humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass(\"Humanoid\")\nlocal RootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(\"HumanoidRootPart\")\n\nlocal TargetPlayerName = username -- 外部传入的变量\ngetgenv().FollowRunning = true\n\nif not Humanoid or not RootPart then warn(\"角色或Humanoid未加载\") return end\n\nlocal function findTargetPlayer()\n    for _, player in pairs(Players:GetPlayers()) do\n        if player.Name == TargetPlayerName and player.Character then\n            return player.Character\n        end\n    end\n    return nil\nend\n\nlocal function followTarget()\n    while getgenv().FollowRunning do\n        local targetCharacter = findTargetPlayer()\n        if targetCharacter then\n            local targetRootPart = targetCharacter:FindFirstChild(\"HumanoidRootPart\")\n            if targetRootPart then\n                local path = PathfindingService:CreatePath({AgentRadius=2, AgentHeight=5, AgentCanJump=true, AgentCanClimb=true, WaypointSpacing=4, Costs={Water=20, Dangerous=math.huge}})\n                local success, errorMessage = pcall(function()\n                    path:ComputeAsync(RootPart.Position, targetRootPart.Position)\n                end)\n                if success and path.Status == Enum.PathStatus.Success then\n                    for _, waypoint in ipairs(path:GetWaypoints()) do\n                        if not getgenv().FollowRunning then return end\n                        if not Humanoid or Humanoid.Health <= 0 then return end\n                        Humanoid:MoveTo(waypoint.Position)\n                        if waypoint.Action == Enum.PathWaypointAction.Jump then Humanoid.Jump = true end\n                        local reached = Humanoid.MoveToFinished:Wait(3)\n                        if not reached then break end\n                    end\n                end\n            end\n        end\n        task.wait(1)\n    end\nend\n\nspawn(followTarget)"
    },
    {
        "command": "/stopfollow",
        "description": "停止持续跟随玩家，比如别跟着我了，停下等",
        "code": "getgenv().FollowRunning = false\nprint(\"已停止跟随\")"
    }
]
